services:
  # PostgreSQL database (pre-existing at localhost:5432)
  # Keep your existing PostgreSQL config, but adding to the same network
  postgres:
    image: postgres:17
    container_name: ewallet-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ewallet
      KEYCLOAK_USER: keycloak
      KEYCLOAK_PASSWORD: keycloak
      KEYCLOAK_DB: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create-keycloak-user.sql:/docker-entrypoint-initdb.d/create-keycloak-user.sql
    networks:
      - ewallet-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: ewallet-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ewallet-network

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: ewallet-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - ewallet-network

  # Kafka UI - management interface for Kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ewallet-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: ewallet-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - ewallet-network

  # Spring Boot backend
  # backend:
  #   build:
  #     context: ../backend
  #     dockerfile: Dockerfile
  #   container_name: ewallet-backend
  #   restart: always
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   ports:
  #     - "8085:8085" #port changed to 8085
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ewallet
  #     SPRING_DATASOURCE_USERNAME: postgres
  #     SPRING_DATASOURCE_PASSWORD: postgres
  #     SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  #   networks:
  #     - ewallet-network


  # # Next.js frontend
  # frontend:
  #   build:
  #     context: ../e-wallet-frontend
  #     dockerfile: Dockerfile
  #   container_name: ewallet-frontend
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NEXT_PUBLIC_API_URL: http://localhost:8085/api #api url changed to 8085
  #   networks:
  #     - ewallet-network

networks:
  ewallet-network:
    driver: bridge

volumes:
  postgres_data: